library(tidyverse)
#I suspect there must be a difference between missing observations marked
#with "-" and those marked with ".", but I did not find an explanation
#therefore I am classing both cases as NA without differentiation
haushalte <- read_csv2("63111-0001.csv", skip = 6, col_names = FALSE,
locale = locale(encoding = "latin1"), na = c("-", "."))
#I suspect there must be a difference between missing observations marked
#with "-" and those marked with ".", but I did not find an explanation
#therefore I am classing both cases as NA without differentiation
haushalte <- read_csv2("63111-0001.csv", skip = 6, col_names = FALSE,
locale = locale(encoding = "latin1"), na = c("-", "."))
View(haushalte)
library(tidyverse)
#I suspect there must be a difference between missing observations marked
#with "-" and those marked with ".", but I did not find an explanation
#therefore I am classing both cases as NA without differentiation
haushalte <- read_csv2("63111-0001.csv", skip = 6, col_names = FALSE,
locale = locale(encoding = "latin1"), na = c("-", "."))
View(haushalte)
#remove info at the bottom
plain_data <- slice(haushalte, 5:23) %>%
X1 <- as.Date(plain_data$X1, format = "%d.%m.%Y")
l
#remove info at the bottom
plain_data <- slice(haushalte, 5:23) %>%
X1 <- as.Date(plain_data$X1, format = "%d.%m.%Y")
#remove info at the bottom
plain_data <- slice(haushalte, 5:23) %>%
mutate(X1 = as.Date(X1, format = "%d.%m.%Y"))
View(plain_data)
typeof(plain_data[1])
is.character(plain_data$X1)
sapply(plain_data, class)
plain_data
?inconv
??inconv
?iconv
?across
#remove info at the bottom
plain_data <- slice(haushalte, 5:23) %>%
mutate(X1 = as.Date(X1, format = "%d.%m.%Y")) %>%
mutate(across(.cols = X2:X73,.fns = as.numeric()))
#remove info at the bottom
plain_data <- slice(haushalte, 5:23) %>%
mutate(X1 = as.Date(X1, format = "%d.%m.%Y")) %>%
mutate(across(.cols = X2:X73,.fns = as.numeric))
?as.numeric
#remove info at the bottom
plain_data <- slice(haushalte, 5:23) %>%
mutate(X1 = as.Date(X1, format = "%d.%m.%Y")) %>%
mutate(across(.cols = X2:X73,.fns = as.numeric(sep = ",")))
#remove info at the bottom
plain_data <- slice(haushalte, 5:23) %>%
mutate(X1 = as.Date(X1, format = "%d.%m.%Y")) %>%
mutate(across(.cols = X2:X73,.fns = as.numeric(decimal_mark = ",")))
#remove info at the bottom
plain_data <- slice(haushalte, 5:23) %>%
mutate(X1 = as.Date(X1, format = "%d.%m.%Y")) %>%
mutate(across(.cols = X2:X73,.fns = as.numeric(sub(",", "."))))
#remove info at the bottom
plain_data <- slice(haushalte, 5:23) %>%
mutate(X1 = as.Date(X1, format = "%d.%m.%Y")) %>%
mutate(across(.cols = X2:X73,.fns = as.numeric(sub(",", ".", x = Input))))
#remove info at the bottom
plain_data <- slice(haushalte, 5:23) %>%
mutate(X1 = as.Date(X1, format = "%d.%m.%Y")) %>%
mutate(across(.cols = X2:X73,.fns = as.numeric(sub(",", ".", x = X2:X73))))
#remove info at the bottom
plain_data <- slice(haushalte, 5:23) %>%
mutate(X1 = as.Date(X1, format = "%d.%m.%Y")) %>%
mutate(across(.cols = X2:X73,.fns = as.numeric(sub(",", ".", .x))))
#remove info at the bottom
plain_data <- slice(haushalte, 5:23) %>%
mutate(X1 = as.Date(X1, format = "%d.%m.%Y")) %>%
mutate(across(.cols = X2:X73,.fns = ~as.numeric(sub(",", ".", .x))))
typeof(plain_data[3])
sapply(plain_data, class)
sum_test <- plain_data %>%
summarise(sum())
View(sum_test)
sum_test <- plain_data %>%
summarise(across(sum()))
sum_test <- plain_data %>%
summarise(across(X1:X73, sum()))
sum_test <- plain_data %>%
summarise(across(X1:X73, sum))
sum_test <- plain_data %>%
summarise(across(X2:X73, sum))
View(sum_test)
sum_test <- plain_data %>%
summarise(across(X2:X73, ~sum(.x, na.rm = TRUE)))
library(tidyverse)
#I suspect there must be a difference between missing observations marked
#with "-" and those marked with ".", but I did not find an explanation
#therefore I am classing both cases as NA without differentiation
full_data <- read_csv2("63111-0001.csv", skip = 6, col_names = FALSE,
locale = locale(encoding = "latin1"), na = c("-", "."))
#remove info at the bottom
stripped_data <- slice(full_data, 5:23) %>%
mutate(X1 = as.Date(X1, format = "%d.%m.%Y")) %>%
mutate(across(X2:X73, ~as.numeric(sub(",", ".", .x))))
View(full_data)
View(stripped_data)
#remove info at the bottom and assign correct data types
stripped_data <- slice(full_data, 5:23) %>%
mutate(X1 = as.Date(X1, format = "%d.%m.%Y")) %>%
mutate(across(X2:X73, ~as.numeric(sub(",", ".", .x)))) %>%
mutate(X3 = X3 * 1000)
#create list of column names
#I am integrating the unit % into the column names, but not integrating the 1000 factor
#for the column "Erfasste Haushalte" since I am transforming this column back to full size values
name_list <- c("Snapshot Date", full_data[1,2:3], paste(full_data[3,4:73], "[%]", sep = " "))
View(name_list)
#clean table with column names
final_table <- colnames(stripped_data) <- name_list
View(final_table)
#clean table with column names
final_table <- stripped_data %>%
rename(name_list)
#clean table with column names
final_table <- stripped_data %>%
rename_with(name_list)
library(magrittr)
#clean table with column names
final_table <- stripped_data %>%
set_colnames(name_list)
View(final_table)
write_csv(final_table, "utility_objects_private_households_clean.csv")
